{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ATUPSAMU\\\\Desktop\\\\shopping\\\\src\\\\screens\\\\WalletScreen.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Table, Form, Button, Row, Col } from 'react-bootstrap';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport { getUserDetails, updateUserProfile } from '../actions/userActions';\nimport { getCustomerWallet, createWallet } from '../actions/walletActions';\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants';\n\nconst WalletScreen = ({\n  location,\n  history\n}) => {\n  const dispatch = useDispatch();\n  const [sdkReady, setSdkReady] = useState(true);\n  const customerWallet = useSelector(state => state.customerWallet);\n  const {\n    wallet,\n    loading,\n    error\n  } = customerWallet;\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    userInfo\n  } = userLogin;\n  const userUpdateProfile = useSelector(state => state.userUpdateProfile);\n  const {\n    success\n  } = userUpdateProfile;\n  let walletId = '';\n  let currentBalance = 0;\n\n  if (!loading) {\n    //   Calculate prices\n    console.log(wallet.id + \"****************\");\n    walletId = wallet.id;\n    currentBalance = wallet.currentBalance;\n  }\n\n  useEffect(() => {\n    console.log(\"into wallet\");\n\n    if (!userInfo) {\n      history.push('/login');\n    } else if (!wallet || wallet.id === '') {\n      dispatch({\n        type: USER_UPDATE_PROFILE_RESET\n      }); //dispatch(getUserDetails('profile'))\n\n      dispatch(getCustomerWallet());\n      console.log(JSON.stringify(wallet) + \"*********\");\n    }\n  }, [dispatch, success, wallet]);\n\n  const createWalletHandler = () => {\n    dispatch(createWallet({\n      currentBalance: 1000\n    }));\n  };\n\n  return /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 9,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, \"My Wallet \", walletId, \" \"), walletId && walletId.length ? /*#__PURE__*/React.createElement(Table, {\n    striped: true,\n    bordered: true,\n    hover: true,\n    responsive: true,\n    className: \"table-sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }\n  }, \"ID\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }\n  }, \"CURRENT BALANCE\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    key: walletId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 19\n    }\n  }, walletId), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 19\n    }\n  }, currentBalance)))) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  }, \"No Wallet Found. Click Below to create Wallet with initial benefit of 1000\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 87\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 92\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: createWalletHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  }, \"Create Wallet\"))));\n};\n\nexport default WalletScreen;","map":{"version":3,"sources":["C:/Users/ATUPSAMU/Desktop/shopping/src/screens/WalletScreen.js"],"names":["React","useState","useEffect","Table","Form","Button","Row","Col","LinkContainer","useDispatch","useSelector","Message","Loader","getUserDetails","updateUserProfile","getCustomerWallet","createWallet","USER_UPDATE_PROFILE_RESET","WalletScreen","location","history","dispatch","sdkReady","setSdkReady","customerWallet","state","wallet","loading","error","userLogin","userInfo","userUpdateProfile","success","walletId","currentBalance","console","log","id","push","type","JSON","stringify","createWalletHandler","length"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Table, Form, Button, Row, Col } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\nimport { getCustomerWallet, createWallet } from '../actions/walletActions'\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants'\n\nconst WalletScreen = ({ location, history }) => {\n  \n  const dispatch = useDispatch()\n  const [sdkReady, setSdkReady] = useState(true)\n\n   const customerWallet = useSelector((state) => state.customerWallet)\n  const { wallet, loading, error } = customerWallet\n\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n\n  const userUpdateProfile = useSelector((state) => state.userUpdateProfile)\n  const { success } = userUpdateProfile\n\n  let walletId = '';\n  let currentBalance = 0;\n  if (!loading) {\n    //   Calculate prices\n   console.log(wallet.id + \"****************\")\n   walletId = wallet.id;\n   currentBalance = wallet.currentBalance;\n  }\n\n  useEffect(() => {\n    console.log(\"into wallet\")\n    if (!userInfo) {\n      history.push('/login')\n    } else if (!wallet || wallet.id === '') {\n        dispatch({ type: USER_UPDATE_PROFILE_RESET })\n        //dispatch(getUserDetails('profile'))\n        dispatch(getCustomerWallet())\n        console.log(JSON.stringify(wallet) + \"*********\")\n    }\n  }, [dispatch, success, wallet])\n\n  const createWalletHandler = () => {\n    dispatch(\n      createWallet({\n        currentBalance: 1000,\n      })\n    )\n  }\n\n  return (\n    <Row>\n      \n      <Col md={9}>\n        <h2>My Wallet {walletId} </h2>\n\n        {/* {loading ? (\n          <Loader />\n        ) : error ? (\n          <Message variant='danger'>{error}</Message>\n        ) : (\n          <Table striped bordered hover responsive className='table-sm'>\n            <thead>\n              <tr>\n                <th>ID</th>\n                <th>CURRENT BALANCE</th>\n                <th></th>\n              </tr>\n            </thead>\n            <tbody>\n              {wallets.map((wallet) => (\n                <tr key={wallet._id}>\n                  <td>{wallet._id}</td>\n                  <td>{wallet.currentBalance}</td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n        )} */}\n\n          {walletId && walletId.length ? \n            <Table striped bordered hover responsive className='table-sm'>\n            <thead>\n              <tr>\n                <th>ID</th>\n                <th>CURRENT BALANCE</th>\n              </tr>\n            </thead>\n            <tbody>\n                <tr key={walletId}>\n                  <td>{walletId}</td>\n                  <td>{currentBalance}</td>\n                </tr>\n            </tbody>\n          </Table>\n        : \n          <div>\n            No Wallet Found. Click Below to create Wallet with initial benefit of 1000<br/><br/>\n            <button onClick={createWalletHandler}>Create Wallet</button>\n          </div>\n          \n          }\n          \n      </Col>\n    </Row>\n  )\n}\n\nexport default WalletScreen\n"]},"metadata":{},"sourceType":"module"}